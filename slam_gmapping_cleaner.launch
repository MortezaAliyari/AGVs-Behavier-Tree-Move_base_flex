<launch>
    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name="slam_methods" default="gmapping" doc="slam type [gmapping, cartographer, hector, karto, frontier_exploration]"/>
    <arg name="configuration_basename" default="turtlebot3_lds_2d.lua"/>
    <arg name="open_rviz" default="true"/>

    <arg name="set_base_frame" default="base_footprint"/>
    <arg name="set_odom_frame" default="odom"/>
    <arg name="set_map_frame"  default="map_cm"/>

    <!-- TurtleBot3 -->
    <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote_cm.launch">
        <arg name="model" value="$(arg model)" />
       <!-- <remap from="map"                                 to="cm/map"/>
        <remap from="map_metadata"                       to="cm/map_metadata"/>
        <remap from="map_updates"                        to="cm/map_updates"/> -->
    </include>





    <param name="use_sim_time" value="true"/>
    <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping_cleaner" output="screen">

        <param name="base_frame" value="$(arg set_base_frame)"/>
        <param name="odom_frame" value="$(arg set_odom_frame)"/>
        <param name="map_frame"  value="$(arg set_map_frame)"/>
        <remap from="map"                                 to="cm/map"/>
        <remap from="/map_metadata"                       to="cm/map_metadata"/>
        <remap from="/map_updates"                        to="cm/map_updates"/>

        <!-- <remap from="scan" to="base_scan"/> -->
        <rosparam command="load" file="$(find turtlebot3_slam)/config/gmapping_params.yaml" />

    </node>


    <!-- rviz -->
    <group if="$(arg open_rviz)">
        <node pkg="rviz" type="rviz" name="rviz_cm" required="true"
           args="-d $(find turtlebot3_slam)/rviz/turtlebot3_$(arg slam_methods)_cm.rviz"/>
        </group>
</launch>
